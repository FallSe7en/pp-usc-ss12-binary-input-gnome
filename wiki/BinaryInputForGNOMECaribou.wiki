#summary General information of the project

= Abstract =

[http://live.gnome.org/Caribou Caribou] is a text entry and UI navigation application being developed as an alternative to the GNOME On-screen Keyboard. The overarching goal for Caribou is to create a usable solution for people whose primary way of accessing a computer is a switch device.  Our goal for this project in this competition is to allow a user to use a binary input, such as a button, to interface with Caribou rather than with a mouse.

= Team =

[http://img684.imageshack.us/img684/3016/dragonsb.jpg]

  * *John Kim* (kim19 at usc dot edu)
  * *Justin Lei* (justinyl at usc dot edu)
  * *Matthew Michihara* (michihar at usc dot edu)
  * *James Myoung* (jkmyoung at usc dot edu)
  * *Benjamin Walker* (bwwalker at usc dot edu)
  * *Michael Wei* (weim at usc dot edu)

= General Overview =

The *Binary Input for GNOME Caribou (BIFGC)* (or *Double Dragons*) project is intended to combine binary input interface with a morse code functionality.  Unlike a usual On-screen keyboard where a user is expected to mouse over the keys and click them, BIFGC allows a user to type all 26 alphabetic characters with the use of only two keys.  It accomplishes this by allowing the user to instead input dots (·) and dashes (—) as one would in morse code, except with two specified dot and dash buttons.  The user is able to select and type their specified key after they are finished "signaling" by simultaneously pressing both buttons.  The user is further helped with the visual aid of a simplified morse-code decision tree as shown [http://gok.ca/morse.html here], as well as a color-coded keyboard that informs the user of whether a dot or a dash is required to eventually get to a certain character.

= Technical Overview =

[http://live.gnome.org/Caribou Caribou] uses the [http://www.gtk.org/ GTK+] toolkit which allows a user to create "graphical user interfaces which boasts cross platform compatibility and an easy to use API."  [http://live.gnome.org/Caribou Caribou] is written in the [http://www.python.org/ Python Programming Language] while [http://www.gtk.org/ GTK+] is written in C.  However, [http://www.gtk.org/ GTK+] has bindings to languages such as [http://www.python.org/ Python] which allows us to use it with [http://live.gnome.org/Caribou Caribou] for all of our additions that make up BIFGC.

[http://img121.imageshack.us/img121/3222/ss12blockdiagram.png]

Our project uses preexisting keyboard listeners already used in Caribou.  We added mappings to the left Ctrl key and the Super Key (the Windows or Apple key) to simulate choosing between a dot or dash in morse code.  We also have a mapping for when both the left Ctrl and Super keys are pressed at the same time, where the current morse code selected character is then inputted into the desired program.  This character input also happens when a user has reached the bottom level of our character decision tree.

== PUT A PICTURE OF THE PROGRAM HERE ==

Building off of the pre-existing Caribou keyboard, 

= Future Improvements =

  # Replace On-screen keyboard with a larger, more detailed decision tree.
  # Add support for numbers, punctuation marks, and various other special characters.
  # Add support for non-English keyboard layouts.